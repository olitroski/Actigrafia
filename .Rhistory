BenjaminVenegas_acv <- readRDS("D:/OneDrive/INTA/Actigrafia/testfolder/BenjaminVenegas_acv.rds")
View(BenjaminVenegas_acv)
library(shiny); runApp('OneDrive/App de prueba.R')
list.files()
dir()
print("hola k ase")
1 + a
1 + a
time <- "23-05-2019"
time <- "23-05-2019"
time <- c("23-05-2019", "", NULL, "ola k ase", 2341, "23:23")
library(lubridate)
try({dmy_hm("01-01-2000 23:50")})
try({dmy_hm("01-01-2000 xxx 23:50")})
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
for (f in time) {
print(f)
tryCatch({
print(dmy_hm(paste(date, f)))
}, warning=function(w) print("FAIL!")))
}
source('~/.active-rstudio-document')
function(w)
for (f in time) {
print(f)
tryCatch({
print(dmy_hm(paste(date, f)))
}, warning=function(w) print("FAIL!"))
}
runiform(2)
runif(2)
rnorm(n = 10, mean = 2, sd = 1)
install.packages(c("covr", "dplyr", "fs", "ggplot2", "lifecycle", "survival"))
install.packages("reticulate")
reticulate::repl_python()
#%% Cargar todo primero
reticulate::repl_python()
from selenium import webdriver
import time
import os
import pandas as pd
import csv
no
q
exit
library(reticulate)
py_available()
py_discover_config()
py_config()
virtualenv_list()
library("lubridate")
lubridate::hm("20:00")
packlist <- c("kableExtra", "Hmisc", "openxlsx", "fs", "shinyFiles","shiny",
"rmarkdown","haven", "data.table", "stringr", "purrr")
library(packlist)
library(c("kableExtra", "Hmisc", "openxlsx", "fs", "shinyFiles","shiny",
"rmarkdown","haven", "data.table", "stringr", "purrr"))
library(list("kableExtra", "Hmisc", "openxlsx", "fs", "shinyFiles","shiny",
"rmarkdown","haven", "data.table", "stringr", "purrr"))
packlist <- c("kableExtra", "Hmisc", "openxlsx", "fs", "shinyFiles","shiny",
"rmarkdown","haven", "data.table", "stringr", "purrr")
for (lib in packlist) {
eval(parse(text = paste0("library(",lib,")")))
}
warnings()
hm(" 23:00")
library(lubridate)
hm(" 23:00")
library(data.table)
hm(" 23:00")
library(dplyr)
help(replace)
install.packages("longitudinal")
library(longitudinal)
library(longitudinal)
data(tcell)
head(tcell)
head(tcell.10)
tcell
tcell.10
as.data.frame(tcell.10)
head(austres)
austres
head(beavers)
head(beaver1)
dim(beaver1)
(beaver1)
cor(mtcars)
library(dplyr)
head(mtcars)
mtcars <- select(mtcars, mpg, disp, hp, drat, wt, asec)
mtcars <- select(mtcars, mpg, disp, hp, drat, wt, qsec)
cor(mtcars)
nrow(mtcars)
nrow(mtcars)/2
rep(6, nrow(mtcars)/2)
paste0("M", rep(6, nrow(mtcars)/2))
paste0("M", rep(12, nrow(mtcars)/2))
mtcars$muestra <- c(paste0("M", rep(6, nrow(mtcars)/2)), paste0("M", rep(12, nrow(mtcars)/2)))
row.names(mtcars) <- NULL
head(mtcars)
mtcars$id <- c(1:nrow(mtcars)/2, 1:nrow(mtcars)/2)
mtcars$id <- c(1:(nrow(mtcars)/2) , 1:(nrow(mtcars)/2))
head(mtcars)
mtcars[c(3, 13), 1:6] <- NA
mtcars
m12 <- filter(mtcars, muestra == "M12")
m12
m12 <- row.names(m12) <- paste0(subj, m12$id)
m12 <- row.names(m12) <- paste0("subj", m12$id)
m12
m12 <- filter(mtcars, muestra == "M12")
row.names(m12) <- paste0("subj", m12$id)
m12
m12 <- select(m12, -muestra, -id)
m12
t(m12)
m12 <- t(m12)
source("D:/OneDrive/GitHub/sources/exploratory/opwcorr.r")
subj3 <- m12$subj3
m12$subj3
class(m12)
# ------ buscar parecidos ---------
# Buscar similares a los 12M
m12 <- filter(mtcars, muestra == "M12")
row.names(m12) <- paste0("subj", m12$id)
m12 <- select(m12, -muestra, -id)
m12
# Damos vuelta los datos
m12 <- as.data.frame(t(m12))
subj3 <- m12$subj3
m12
names(m12)
opwcorr("subj3", names(m12), data = m12)
opwcorr("subj3", names(m12), data = m12, set = 1)
corr13 <- opwcorr("subj3", names(m12), data = m12, set = 1)
arrange(corr13, r.pearson)
arrange(corr13, desc(r.pearson))
corr13 <- opwcorr("subj13", names(m12), data = m12, set = 1)
arrange(corr13, desc(r.pearson))    # Sujeto 2 - 10 - 14
m12
lm(subj3 ~ subj2 + subj10 + subj14)
lm(subj3 ~ subj2 + subj10 + subj14, data = m12)
fit3 <- lm(subj3 ~ subj2 + subj10 + subj14, data = m12)
summary(fit3)
fit3 <- lm(subj3 ~ subj2, data = m12)
summary(fit3)
predict(fit)
predict(fit3, m12$subj3)
fit3 <- lm(subj3 ~ subj2, data = m12)
predict(fit3, m12$subj3)
m12$subj3
predict(fit3, m12$subj3, interval = "confidence")
predict(fit3, m12[subj3], interval = "confidence")
predict(fit3, m12["subj3"], interval = "confidence")
m12["subj3"]
predict(fit3, m12["subj3"], interval = "confidence")
m6 <- filter(mtcars, muestra == "M6")
row.names(m6) <- paste0("subj", m6$id)
m6 <- select(m6, -muestra, -id)
m6
m12 <- as.data.frame(t(m12))
m6 <- as.data.frame(t(m6))
m6
predict(fit3, data.frame(m6$subj2), interval = "confidence")
predict(fit3, data.frame(subj2 = m6$subj2), interval = "confidence")
fit13 <- lm(subj13 ~ subj8, data = m12)
summary(fit13)
predict(fit13, data.frame(subj13 = m6$subj13), interval = "confidence")
fit13 <- lm(subj13 ~ subj8, data = m12)
source("D:/OneDrive/GitHub/sources/exploratory/opwcorr.r")
library(dplyr)
# ------ simular data  ---------
mtcars <- select(mtcars, mpg, disp, hp, drat, wt, qsec)
mtcars$muestra <- c(paste0("M", rep(6, nrow(mtcars)/2)), paste0("M", rep(12, nrow(mtcars)/2)))
row.names(mtcars) <- NULL
mtcars$id <- c(1:(nrow(mtcars)/2) , 1:(nrow(mtcars)/2))
# Suejeto 3 y 13
mtcars[c(3, 13), 1:6] <- NA
# ------ buscar parecidos ---------
# Buscar similares a los 12M
m12 <- filter(mtcars, muestra == "M12")
row.names(m12) <- paste0("subj", m12$id)
m12 <- select(m12, -muestra, -id)
m12
# Damos vuelta los datos
m12 <- as.data.frame(t(m12))
# le buscamos el mas parecido al sujeto 3
corr3 <- opwcorr("subj3", names(m12), data = m12, set = 1)
arrange(corr3, desc(r.pearson))    # Sujeto 2 - 10 - 14
# Le buscamos al 13
corr13 <- opwcorr("subj13", names(m12), data = m12, set = 1)
arrange(corr13, desc(r.pearson))    # Sujeto 8 - 5 - 11
fit13 <- lm(subj13 ~ subj8, data = m12)
summary(fit13)
predict(fit13, data.frame(subj13 = m6$subj13), interval = "confidence")
predict(fit13, data.frame(subj8 = m6$subj13), interval = "confidence")
fit13 <- lm(subj13 ~ subj8, data = m12)
summary(fit13)
predict(fit13, data.frame(subj8 = m6$subj8), interval = "confidence")
m6
corr1 <- opwcorr("subj1", names(m12), data = m12, set = 1)
arrange(corr13, desc(r.pearson))
arrange(corr1, desc(r.pearson))
fit13 <- lm(subj1 ~ subj7, data = m12)
summary(fit1)
fit1 <- lm(subj1 ~ subj7, data = m12)
summary(fit1)
predict(fit1, data.frame(subj7 = m6$subj7), interval = "confidence")
m6$subj1
pred[1]
pred <- predict(fit1, data.frame(subj7 = m6$subj7), interval = "confidence")
pred[1]
pred[[1]]
pred[1,]
pred[,1]
m6$subj1
pred[,1]
data.frame(round(m6$subj1,2), round(pred[,1], 2)
data.frame(round(m6$subj1,2), round(pred[,1], 2))
data.frame(round(m6$subj1,2), round(pred[,1], 2))
data.frame(m6s1 = round(m6$subj1,2), m6fit1 = round(pred[,1], 2))
arrange(corr1, desc(r.pearson))    # el 7
fit <- lm(subj1 ~ subj7 + subj6 + subj9, data = m12)
summary(fit)
fitdata <- select(m6, subj7, subj6, subj9)
fitdata
pred <- predict(fit, fitdata)
pred
data.frame(m6s1 = round(m6$subj1,2), m6fit = round(pred[,1], 2))
data.frame(m6s1 = round(m6$subj1,2), m6fit = round(pred, 2))
rm(list = ls())
mainfolder <- "D:/OneDrive/INTA/Actigrafia"
setwd(mainfolder)
source("appLoader.R")
runApp()
rm(list = ls())
mainfolder <- "D:/OneDrive/INTA/Actigrafia"
setwd(mainfolder)
source("appLoader.R")
runApp(launch.browser = TRUE)
warnings()
runApp()
runApp()
runApp('D:/OneDrive/INTA/Actigrafia')
