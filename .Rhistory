BenjaminVenegas_acv <- readRDS("D:/OneDrive/INTA/Actigrafia/testfolder/BenjaminVenegas_acv.rds")
View(BenjaminVenegas_acv)
library(shiny); runApp('OneDrive/App de prueba.R')
list.files()
dir()
source('D:/OneDrive/INTA/Actigrafia/mainScript.R', encoding = 'UTF-8', echo=TRUE)
awdfolder <- "D:/OneDrive/INTA/Actigrafia/testfolder/test_kansas"
setwd(awdfolder)
archivos <- dir()
archivos <- archivos[grep(".[Aa][Ww][Dd]$", archivos)]
awdfile <- archivos[1]
awdfile <- str_replace(awdfile, ".AWD", "")
rm(archivos)
str_c(awdfile, ".AWD")
acv <- create.acv(str_c(awdfile, ".AWD"))
acv <- create.acv(str_c(awdfile, ".AWD"), sensi = 40)
semiper <- create.semiper(acv)
statdf <- function(semidf){
# Captura la actividad y stage calcula media, sd
ms <- mean(semidf$act.edit[semidf$st.edit == "S"])
ss <-   sd(semidf$act.edit[semidf$st.edit == "S"])
mw <- mean(semidf$act.edit[semidf$st.edit == "W"])
sw <-   sd(semidf$act.edit[semidf$st.edit == "W"])
pctS <- sum(semidf$st.edit == "S")/nrow(semidf)
pctW <- sum(semidf$st.edit == "W")/nrow(semidf)
fec <- semidf$time
ini <- min(fec)
fin <- max(fec)
return(data.frame(meanS = ms, sdS = ss, meanW = mw, sdW = sw, pctS=pctS, pctW=pctW, ini = ini, fin = fin))
}
templist <- lapply(semiper, function(x) statdf(x))
templist
sapply(semiper, function(x) statdf(x))
t(sapply(semiper, function(x) statdf(x)))
# Separa dianoc y periodo
dfnames <- names(templist)
allstats <- NULL
for (df in dfnames){
dftemp <- templist[[df]]
dftemp$dianoc <- str_sub(df, 1,1)
dftemp$per <- str_sub(df, 2,2)
allstats <- bind_rows(allstats, dftemp)
}
allstats
View(allstats)
View(t(sapply(semiper, function(x) statdf(x))))
t(sapply(semiper, function(x) statdf(x)))
a <-    t(sapply(semiper, function(x) statdf(x)))
a <-    t(sapply(semiper, function(x) statdf(x), simplify = TRUE))
a <-    as.data.frame(t(sapply(semiper, function(x) statdf(x), simplify = TRUE)))
a
a <-    as.data.frame(t(sapply(semiper, function(x) statdf(x), simplify = FALSE)))
a
a <-    as.data.frame(t(sapply(semiper, function(x) statdf(x), simplify = TRUE)))
a
View(a)
allstats
library(microbenchmark)
install.packages("microbenchmark")
library(microbenchmark)
test %>% mutate(dianoc = str_sub(row.names(test), 1, 1),
per = str_sub(row.names(test), 2, 2),
ini = as_datetime(ini, lubridate::origin),
fin = as_datetime(fin, lubridate::origin))
test <- as.data.frame(t(sapply(semiper, function(x) statdf(x), simplify = TRUE)))
test %>% mutate(dianoc = str_sub(row.names(test), 1, 1),
per = str_sub(row.names(test), 2, 2),
ini = as_datetime(ini, lubridate::origin),
fin = as_datetime(fin, lubridate::origin))
test <- as.data.frame(t(sapply(semiper, function(x) statdf(x), simplify = TRUE)))
test
as_datetime(test$ini)
as_datetime(test$ini, origin)
as_datetime(test$ini, lubridate::origin)
as_datetime(test$ini, lubridate::origin, tzone = "UTC")
test$ini
str(test)
View(test)
test$ini
bind_rows(test)
test <- as.data.frame(t(sapply(semiper, function(x) statdf(x), simplify = TRUE, USE.NAMES = TRUE)))
test
class(test)
test %>% mutate(dianoc = str_sub(row.names(test), 1, 1),
per = str_sub(row.names(test), 2, 2))
test %>% mutate(dianoc = str_sub(row.names(test), 1, 1),
per = str_sub(row.names(test), 2, 2)) %>% bind_rows(test)
stats <- t(sapply(semiper, function(x) statdf(x), simplify = TRUE)
stats <- t(sapply(semiper, function(x) statdf(x), simplify = TRUE))
stats <- t(sapply(semiper, function(x) statdf(x), simplify = TRUE))
names(stats)
stats <- t(sapply(semiper, function(x) statdf(x), simplify = TRUE, USE.NAMES = TRUE))
names(stats)
stats <- sapply(semiper, function(x) statdf(x), simplify = TRUE)
stats <- apply(semiper, function(x) statdf(x))
stats <- apply(semiper, function(x) statdf(x))
apply(semiper, function(x) statdf(x))
stats <- lapply(semiper, function(x) statdf(x))
names(stats)
bind_rows(stats)
stats <- bind_rows(stats)
stats <- lapply(semiper, function(x) statdf(x))
period <- names(stats)
stats <- bind_rows(stats)
stats <- lapply(semiper, function(x) statdf(x))
period <- names(stats)
stats <- bind_rows(stats) %>% mutate(dianoc = str_sub(period, 1, 1),
per = str_sub(period, 2, 2))
stats
microbenchmark({
# data.frame de stats version vector
stats <- lapply(semiper, function(x) statdf(x))
period <- names(stats)
stats <- bind_rows(stats) %>% mutate(dianoc = str_sub(period, 1, 1),
per = str_sub(period, 2, 2))
}, times = 20)
microbenchmark({
# data.frame de stats version loop
templist <- lapply(semiper, function(x) statdf(x))
dfnames <- names(templist)
allstats <- NULL
for (df in dfnames){
dftemp <- templist[[df]]
dftemp$dianoc <- str_sub(df, 1,1)
dftemp$per <- str_sub(df, 2,2)
allstats <- bind_rows(allstats, dftemp)
}
}, times = 20)
# data.frame de stats version vector
stats <- lapply(semiper, function(x) statdf(x))
period <- names(stats)
stats <- bind_rows(stats) %>% mutate(dianoc = str_sub(period, 1, 1),
per = str_sub(period, 2, 2))
# data.frame de stats version loop
templist <- lapply(semiper, function(x) statdf(x))
dfnames <- names(templist)
allstats <- NULL
for (df in dfnames){
dftemp <- templist[[df]]
dftemp$dianoc <- str_sub(df, 1,1)
dftemp$per <- str_sub(df, 2,2)
allstats <- bind_rows(allstats, dftemp)
}
allstats == stats
stats
allstats
name <- paste(str_replace(awdfile, ".[Aa][Ww][Dd]", ""), ".edit", sep = "")
cat(paste("Se crea el archivo de filtro", name, "\n"))
header <-c("Archivo de edici?n", name, str_c("Creado el ", as.character(Sys.time())),
"------------------------------------")
header
header <-c("Archivo de Filtro", name, str_c("Creado el ", as.character(Sys.time())),
"------------------------------------")
header
header <-c(str_c("Archivo Filtro - Sujeto: ", name),
str_c("Creado el ", as.character(Sys.time())),
"------------------------------------")
header
header <-c("Archivo Filtro",
str_c("Sujeto: ", name),
str_c("Creado: ", as.character(Sys.time())),
"------------------------------------")
header
allstats
filter(allstats, filter == 1)
allstats <- lapply(semiper, function(x) statdf(x))
period <- names(allstats)
allstats <- bind_rows(stats) %>% mutate(dianoc = str_sub(period, 1, 1),
per = str_sub(period, 2, 2),
filter = ifelse(is.na(meanW), 1, NA))   # <- este es el primer filtro
allstats
filtro <- filter(allstats, filter == 1)
filtro
filtro <- allstats %>% filter(filter == 1) %>% arrange(ini) %>%
mutate(ini = format(filtro$ini, format = "%Y/%m/%d %H:%M"),
fin = format(filtro$fin, format = "%Y/%m/%d %H:%M"))
filtro
filtro <- allstats %>% filter(filter == 1) %>% arrange(ini) %>%
mutate(ini = format(filtro$ini, format = "%Y/%m/%d %H:%M"),
fin = format(filtro$fin, format = "%Y/%m/%d %H:%M"),
tipo = 1) %>% select(tipo, ini, fin)
filtro
filtro <- mutate(filtro, n = 1:nrow(filtro)) %>% select(n, ini, fin, tipo)
filtro
filtro <- allstats %>% filter(filter == 1) %>% arrange(ini) %>%
mutate(ini = format(filtro$ini, format = "%Y/%m/%d %H:%M"),
fin = format(filtro$fin, format = "%Y/%m/%d %H:%M"),
tipo = 1) %>% select(tipo, ini, fin)
filtro <- mutate(filtro, id = 1:nrow(filtro)) %>% select(id, ini, fin, tipo)
filtro
list(header = header, filter = filtro)
source('D:/OneDrive/INTA/Actigrafia/mainScript.R', encoding = 'UTF-8', echo=TRUE)
awdfolder <- "D:/OneDrive/INTA/Actigrafia/testfolder/test_kansas"
setwd(awdfolder)
archivos <- dir()
archivos <- archivos[grep(".[Aa][Ww][Dd]$", archivos)]
awdfile <- archivos[1]
awdfile <- str_replace(awdfile, ".AWD", "")
rm(archivos)
acv <- create.acv(str_c(awdfile, ".AWD"), sensi = 40)
semiper <- create.semiper(acv)
filter.stats <- create.firstfilter(awdfile, semiper)
source('D:/OneDrive/INTA/Actigrafia/func_processAwd/create.firstfilter.R', encoding = 'UTF-8', echo=TRUE)
filter.stats <- create.firstfilter(awdfile, semiper)
source('D:/OneDrive/INTA/Actigrafia/func_processAwd/create.firstfilter.R', encoding = 'UTF-8', echo=TRUE)
filter.stats <- create.firstfilter(awdfile, semiper)
filter.stats
acv.edit <- create.acvedit()
acv <- create.acv(str_c(awdfile, ".AWD"), sensi = 40)
acv.edit <- create.acvedit()
acv.edit <- create.acvedit(awdfile, acv, filter.stats)
source('D:/OneDrive/INTA/Actigrafia/func_processAwd/create.acvedit.R', echo=TRUE)
acv.edit <- create.acvedit(awdfile, acv, filter.stats)
source('D:/OneDrive/INTA/Actigrafia/func_processAwd/create.acvedit.R', echo=TRUE)
acv.edit <- create.acvedit(awdfile, acv, filter.stats)
head(acv.edit)
unique(acv.edit$filter)
source('D:/OneDrive/INTA/Actigrafia/mainScript.R', encoding = 'UTF-8', echo=TRUE)
runApp()
source('D:/OneDrive/INTA/Actigrafia/mainScript.R', encoding = 'UTF-8', echo=TRUE)
acv <- create.acv(str_c(awdfile, ".AWD"), sensi = 40)
semiper <- create.semiper(acv)
filter.stats <- create.firstfilter(awdfile, semiper)
filter.stats
class(filter.stats)
acv.edit <- create.acvedit(awdfile, acv, filter.stats)
View(acv.edit)
filterstats
filter.stats
acv.filter <- acv
f <- 1
nrow(filter.stats)
ini <- filter.stats$ini[f]
ini <- filter.stats$ini[f]
fin <- filter.stats$fin[f]
ini
fin
head(acv.filter)
View(filter.stats)
# str(filter.stats)
str(filter.stats)
source('D:/OneDrive/INTA/Actigrafia/func_processAwd/create.firstfilter.R', encoding = 'UTF-8', echo=TRUE)
acv <- create.acv(str_c(awdfile, ".AWD"), sensi = 40)
semiper <- create.semiper(acv)
filter.stats <- create.firstfilter(awdfile, semiper)
acv.edit <- create.acvedit(awdfile, acv, filter.stats)
View(acv.edit)
rm(list=ls())
# ----- Cargar funciones, settings --------------------------------------------
# Folder del programa
mainfolder <- "D:/OneDrive/INTA/Actigrafia"
setwd(mainfolder)
# Cargar funciones y objetos
source("function_loader.R")
lapply(X=dir()[grep("func_", dir())], FUN=function_loader)
load.library()          # librerias
set <- getset()         # <<<<"configuracion.set">>>>
runApp()
awdfolder <- "D:/OneDrive/INTA/Actigrafia/testfolder/test_kansas"
setwd(awdfolder)
archivos <- dir()
archivos <- archivos[grep(".[Aa][Ww][Dd]$", archivos)]
awdfile <- archivos[1]
awdfile <- str_replace(awdfile, ".AWD", "")
rm(archivos)
acvfile <- paste(awdfile, "_acv.edit.RDS", sep = "")
acvfile <- readRDS(acvfile)
filterfile <- paste(awdfile, ".edit.RDS", sep = "")
filterfile <- readRDS(filterfile)
filterfile
filterfile <- filterfile[["filter"]]
View(filterfile)
filterfile
time <- acvfile$time
filtro <- acvfile$filter
filtroERROR <- rep(NA, nrow(filterfile))
filtroNA <- NULL
for (i in 1:nrow(filterfile)){
indx <- which(time >= filterfile$ini[i] & time <= filterfile$fin[i])
# Solo deben haber numeros, nada de NA
if (sum(is.na(filtro[indx])) != 0){
filtroERROR <- c(filtroERROR, i)
}
# Guarda el index para la otra rueba
filtroNA <- c(filtroNA, indx)
}
filtroNA
filtroERROR
NAtest <- 1:nrow(acvfile)
NAtest <- NAtest[-filtroNA]
NAtest <- sum(!is.na(filtro[NAtest]))
if (NAtest != 0){
filtroNA <- 1
} else {
filtroNA <- 0
}
filtroNA
semiper <- create.semiper(acvfile)
per <- unique(str_sub(names(semiper), 2, 2))
perlist <- list()
for (p in per){
# Capturar lo que termine en p
i <- grep(paste(p, "$", sep = ""), names(semiper))
if (length(i) == 2){
temp <- bind_rows(semiper[[i[2]]], semiper[[i[1]]]) %>% arrange()
} else {
temp <- semiper[[i[1]]]
}
if (as.numeric(p) < 10){p <- paste("0", p, sep ="")}
cmd <- paste("perlist <- append(perlist, list(per", p, " = temp))", sep = "")
eval(parse(text=cmd))
}
lim <- as.numeric(set$ininoc)/3600
perlist <- base::lapply(X = perlist,
function(x) mutate(x, xscale = ifelse(hrdec < lim,
hrdec + 24,
hrdec)))
timelist <- function(df){ return(min(df$time)) }
timelist <- sapply(X = perlist, FUN = timelist)
timelist <- data.frame(time = timelist)
timelist <- timelist %>% mutate(period = row.names(timelist),
time = as_datetime(time, lubridate::origin),
tlist = format(date(time), "%A %d/%m/%y"))
timelist
# ----------------------------------------------------------------------------- #
rm(list=ls())
# ----- Cargar funciones, settings --------------------------------------------
# Folder del programa
mainfolder <- "D:/OneDrive/INTA/Actigrafia"
setwd(mainfolder)
# Cargar funciones y objetos
source("function_loader.R")
lapply(X=dir()[grep("func_", dir())], FUN=function_loader)
load.library()          # librerias
set <- getset()         # <<<<"configuracion.set">>>>
runApp()
runApp()
runApp()
runApp()
runApp()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(ggplot2)
source('~/.active-rstudio-document', echo=TRUE)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
awdfolder <- "D:/OneDrive/INTA/Actigrafia/testfolder/test_kansas"
setwd(awdfolder)
dir()
awdfile <- "2058-001-368 JRG Baseline"
fichero <- str_c(awdfile, ".edit.RDS")
filter.get <- function(){
fichero <- str_c(awdfile, ".edit.RDS")
if (file.exists(fichero)){
info <- file.info(fichero, ".edit.RDS")
return(info)
} else {
return(1)
}
}
filter.get()
filter.get()
filter.get()
filter.get()
a <- filter.get()
View(filter.get())
filter.get()$mtime
filter.get()$mtime
filter.get()$mtime
filter.get()$mtime
filter.get()$mtime
filter.get()$atime
filter.get()$atime
filter.get()$atime
filter.get()$atime
filter.get()$atime
filter.get()$atime
filter.get()$atime
filter.get()$atime
filter.get()$mtime
# | -- Show Filtro --------------------------------------------------------
# Funcion leer el file
filter.get <- function(){
fichero <- str_c(awdfile, ".edit.RDS")
if (file.exists(fichero)){
info <- base::file.info(fichero, ".edit.RDS")
info <- info$mtime
return(info)
} else {
return(1)
}
}
filter.get()
a <-filter.get()
length(filter.get()    )
filter.get <- function(){
fichero <- str_c(awdfile, ".edit.RDS")
if (file.exists(fichero)){
info <- base::file.info(fichero, ".edit.RDS")
info <- info$mtime[1]
return(info)
} else {
return(1)
}
}
length(filter.get()    )
(filter.get()    )
runApp('D:/OneDrive/INTA/Actigrafia')
runApp('D:/OneDrive/INTA/Actigrafia')
runApp('D:/OneDrive/INTA/Actigrafia')
readRDS(fichero)
df <- readRDS(fichero)$filter
df
strptime(df$ini, format = "%d%m%Y %H:%M:%S")
View(df)
format(df$ini, format = "%d%m%Y %H:%M:%S")
runApp('D:/OneDrive/INTA/Actigrafia')
runApp('D:/OneDrive/INTA/Actigrafia')
runApp('D:/OneDrive/INTA/Actigrafia')
runApp('D:/OneDrive/INTA/Actigrafia')
awdfile <- 2058-002-298 MLR Baseline
awdfile <- "2058-002-298 MLR Baseline"
sujeto <- paste(awdfile, ".AWD", sep = "")
acv <- create.acv(sujeto, set$sensivar)
acv <- create.acv(sujeto, set$sensivar)
semiper <- create.semiper(acv)
filter.stats <- create.firstfilter(sujeto, semiper)
statdf <- function(semidf){
# Captura la actividad y stage calcula media, sd
ms <- mean(semidf$act.edit[semidf$st.edit == "S"])
ss <-   sd(semidf$act.edit[semidf$st.edit == "S"])
mw <- mean(semidf$act.edit[semidf$st.edit == "W"])
sw <-   sd(semidf$act.edit[semidf$st.edit == "W"])
pctS <- sum(semidf$st.edit == "S")/nrow(semidf)
pctW <- sum(semidf$st.edit == "W")/nrow(semidf)
fec <- semidf$time
ini <- min(fec)
fin <- max(fec)
return(data.frame(meanS = ms, sdS = ss, meanW = mw, sdW = sw, pctS=pctS, pctW=pctW, ini = ini, fin = fin))
}
allstats <- lapply(semiper, function(x) statdf(x))
period <- names(allstats)
allstats <- bind_rows(allstats) %>% mutate(dianoc = str_sub(period, 1, 1),
per = str_sub(period, 2, 2),
filter = ifelse(is.na(meanW), 1, NA))   # <- este es el primer filtro
allstats$filter <- ifelse(is.na(allstats$meanW), 1, NA)
name <- paste(str_replace(awdfile, ".[Aa][Ww][Dd]", ""), ".edit.RDS", sep = "")
cat(paste("Se crea el archivo de filtro", name, "\n"))
header <-c("Archivo Filtro",
str_c("Sujeto: ", name),
str_c("Creado: ", as.character(Sys.time())),
"------------------------------------")
filtro <- allstats %>% filter(filter == 1) %>% arrange(ini) %>% mutate(tipo = 1) %>% select(tipo, ini, fin)
# mutate(ini = format(ini, format = "%Y/%m/%d %H:%M"),
#        fin = format(fin, format = "%Y/%m/%d %H:%M"),
#        tipo = 1) %>% select(tipo, ini, fin)
filtro
filtro <- allstats %>% filter(filter == 1) %>% arrange(ini) %>% mutate(tipo = 1, id = NA) %>% select(tipo, ini, fin)
filtro
allstats
allstats %>% filter(filter == 1) %>% arrange(ini)
allstats %>% filter(filter == 1) %>% arrange(ini) %>% mutate(tipo = 1, id = NA)
filtro <- allstats %>% filter(filter == 1) %>% arrange(ini) %>% mutate(tipo = 1, id = NA) %>% select(id, ini, fin, tipo)
filtro
filtro <- mutate(filtro, id = 1:nrow(filtro))
1:nrow(filtro)
dim(filtro)
# El archivo edit
name <- paste(str_replace(awdfile, ".[Aa][Ww][Dd]", ""), ".edit.RDS", sep = "")
cat(paste("Se crea el archivo de filtro", name, "\n"))
header <-c("Archivo Filtro",
str_c("Sujeto: ", name),
str_c("Creado: ", as.character(Sys.time())),
"------------------------------------")
filtro <- allstats %>% filter(filter == 1) %>% arrange(ini) %>% mutate(tipo = 1, id = NA) %>% select(id, ini, fin, tipo)
if (dim(filtro)[1] > 0){
filtro <- mutate(filtro, id = 1:nrow(filtro))
}
filtro
cat("Exec-create.firstfilter-")
cat("Exec (create.firstfilter)")
cat("Exec(create.firstfilter)")
cat(paste("Exec(create.firstfilter)"), awdfile)
cat(paste("Exec(create.firstfilter)"), awdfile, "\n")
cat(paste("|--- Se crea el archivo de filtro", name, "\n"))
runApp('D:/OneDrive/INTA/Actigrafia')
source('D:/OneDrive/INTA/Actigrafia/mainScript.R', encoding = 'UTF-8', echo=TRUE)
runApp()
source('D:/OneDrive/INTA/Actigrafia/mainScript.R', encoding = 'UTF-8', echo=TRUE)
runApp()
source('D:/OneDrive/INTA/Actigrafia/mainScript.R', encoding = 'UTF-8', echo=TRUE)
runApp()
runApp()
source('D:/OneDrive/INTA/Actigrafia/mainScript.R', encoding = 'UTF-8', echo=TRUE)
runApp()
