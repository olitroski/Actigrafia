BenjaminVenegas_acv <- readRDS("D:/OneDrive/INTA/Actigrafia/testfolder/BenjaminVenegas_acv.rds")
View(BenjaminVenegas_acv)
library(shiny); runApp('OneDrive/App de prueba.R')
list.files()
dir()
print("hola k ase")
1 + a
1 + a
shiny::runApp('OneDrive/INTA/Actigrafia')
rm(list = ls())
# ----- Cargar funciones, settings --------------------------------------------
# Folder del programa
mainfolder <- "D:/OneDrive/INTA/Actigrafia"
setwd(mainfolder)
# Cargar funciones y objetos
source("function_loader.R")
lapply(X = dir()[grep("func_", dir())], FUN = function_loader)
load.library()          # librerias
set <- getset()
runApp()
options(show.error.messages = TRUE); options(warn = 0)
runApp()
runApp()
runApp()
setwd("D:/OneDrive/INTA/Actigrafia/testfolder/test_kansas")
data <- readRDS("2058-001-368 JRG Baseline.edit.RDS")
names(data)
rm(list = ls())
# ----- Cargar funciones, settings --------------------------------------------
# Folder del programa
mainfolder <- "D:/OneDrive/INTA/Actigrafia"
setwd(mainfolder)
# Cargar funciones y objetos
source("function_loader.R")
lapply(X = dir()[grep("func_", dir())], FUN = function_loader)
load.library()          # librerias
set <- getset()
awdfolder <- "D:/OneDrive/INTA/Actigrafia/testfolder/test_kansas"
setwd(awdfolder)
archivos <- dir()
archivos <- archivos[grep(".[Aa][Ww][Dd]$", archivos)]
awdfile <- archivos[1]
awdfile <- str_replace(awdfile, ".AWD", "")
gdata <- check.acvfilter(awdfile)
gdata <- gdata$semiper
gdata <- check.acvfilter(awdfile)
str(gdata)
names(gdata)
gdata <- gdata$semiper
names(semiper)
names(gdata)
gdata <- gdata$per00
head(gdata)
create.plotActo(gdata)
find.segment(gdata, st.edit, "W")
gdata <- check.acvfilter(awdfile)
gdata <- gdata$semiper
windows()
create.actogram(gdata)
names(gdata)
gdata <- gdata$per08
head(gdata)
gdata <- gdata$per07
gdata <- check.acvfilter(awdfile)
gdata <- gdata$semiper
gdata <- gdata$per07
head(gdata)
gdata <- check.acvfilter(awdfile)
gdata <- gdata$semiper
names(gdata)
for (g in gdata){
g[,1]
}
for (g in gdata){
print(g[,1])
}
for (g in gdata){
print(g[1,])
}
gdata <- gdata$per04
head(gdata)
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
rm(list = ls())
# ----- Cargar funciones, settings --------------------------------------------
# Folder del programa
mainfolder <- "D:/OneDrive/INTA/Actigrafia"
setwd(mainfolder)
# Cargar funciones y objetos
source("function_loader.R")
lapply(X = dir()[grep("func_", dir())], FUN = function_loader)
load.library()          # librerias
set <- getset()
rm(list = ls())
mainfolder <- "D:/OneDrive/INTA/Actigrafia"
setwd(mainfolder)
source("function_loader.R")
lapply(X = dir()[grep("func_", dir())], FUN = function_loader)
source('~/.active-rstudio-document', encoding = 'UTF-8')
rm(list = ls())
# ----- Cargar funciones, settings --------------------------------------------
# Folder del programa
mainfolder <- "D:/OneDrive/INTA/Actigrafia"
setwd(mainfolder)
# Cargar funciones y objetos
source("function_loader.R")
lapply(X = dir()[grep("func_", dir())], FUN = function_loader)
load.library()          # librerias
set <- getset()
runApp()
awdfolder <- "D:/OneDrive/INTA/Actigrafia/testfolder/test_kansas"
setwd(awdfolder)
archivos <- dir()
archivos <- archivos[grep(".[Aa][Ww][Dd]$", archivos)]
awdfile <- archivos[1]
awdfile <- str_replace(awdfile, ".AWD", "")
rm(archivos)
awdfolder <- "D:/OneDrive/INTA/Actigrafia/testfolder/test_kansas"
setwd(awdfolder)
archivos <- dir()
archivos <- archivos[grep(".[Aa][Ww][Dd]$", archivos)]
awdfile <- archivos[1]
awdfile <- str_replace(awdfile, ".AWD", "")
archivos
awdfile <- archivos[1]
awdfile <- str_replace(awdfile, ".AWD", "")
gdata <- check.acvfilter(awdfile)
gdata[1]
gdata[2]
gdata[3]
gdata[4]
gdata <- gdata$semiper
create.actogram(gdata)
windows()
create.actogram(gdata)
gdata <- gdata$per04
View(gdata)
View(gdata)
create.actogram(gdata)
windows()
create.plotActo(gdata)
View(gdata)
create.plotActo(gdata)
windows()
create.plotActo(gdata)
source('D:/OneDrive/INTA/Actigrafia/mainScript.R', encoding = 'UTF-8')
source('D:/OneDrive/INTA/Actigrafia/mainScript.R', encoding = 'UTF-8')
runApp()
source('D:/OneDrive/INTA/Actigrafia/mainScript.R', encoding = 'UTF-8')
runApp()
source('D:/OneDrive/INTA/Actigrafia/func_processAwd/create.plotSimple.R', encoding = 'UTF-8')
runApp()
awdfolder <- "D:/OneDrive/INTA/Actigrafia/testfolder/test_kansas"
setwd(awdfolder)
awdfile <- "2058-010-310 NYU Visit3"
awdfile <- str_replace(awdfile, ".AWD", "")
gdata <- check.acvfilter(awdfile)
gdata[4]
gdata <- gdata$semiper
names(gdata)
gdata <- gdata$per00
View(gdata)
windows()
create.plotActo(gdata)
windows()
create.plotSimple(gdata)
otable("st.edit", data = gdata)
# X: Escala y etuquetas
xscale <- seq(as.numeric(set$ininoc)/3600, length.out = 25)
xlabel <- ifelse(xscale >= 48, xscale - 48, ifelse(xscale >= 24, xscale - 24, xscale))
# Y: Lineas al inicio, dia, y fin
ylinea <- as.numeric(c(set$ininoc, set$inidia + hours(24), set$ininoc + hours(24)))/3600
# Y: Limites
chy <- (ceiling(max(gdata$act.edit)/10)*10) * pct.y
limY <-  c(0, chy)     # experimento
# limY[2] <- limY[2] * pct.y
# Limite en X
if (class(limites) == "NULL"){
limX <- c(min(xscale), max(xscale))
} else {
limX <- limites
}
limites = NULL
xscale <- seq(as.numeric(set$ininoc)/3600, length.out = 25)
xlabel <- ifelse(xscale >= 48, xscale - 48, ifelse(xscale >= 24, xscale - 24, xscale))
# Y: Lineas al inicio, dia, y fin
ylinea <- as.numeric(c(set$ininoc, set$inidia + hours(24), set$ininoc + hours(24)))/3600
# Y: Limites
chy <- (ceiling(max(gdata$act.edit)/10)*10) * pct.y
limY <-  c(0, chy)     # experimento
# limY[2] <- limY[2] * pct.y
# Limite en X
if (class(limites) == "NULL"){
limX <- c(min(xscale), max(xscale))
} else {
limX <- limites
}
xscale <- seq(as.numeric(set$ininoc)/3600, length.out = 25)
xlabel <- ifelse(xscale >= 48, xscale - 48, ifelse(xscale >= 24, xscale - 24, xscale))
ylinea <- as.numeric(c(set$ininoc, set$inidia + hours(24), set$ininoc + hours(24)))/3600
pct.y = 1
lw = 1
# X: Escala y etuquetas
xscale <- seq(as.numeric(set$ininoc)/3600, length.out = 25)
xlabel <- ifelse(xscale >= 48, xscale - 48, ifelse(xscale >= 24, xscale - 24, xscale))
# Y: Lineas al inicio, dia, y fin
ylinea <- as.numeric(c(set$ininoc, set$inidia + hours(24), set$ininoc + hours(24)))/3600
# Y: Limites
chy <- (ceiling(max(gdata$act.edit)/10)*10) * pct.y
limY <-  c(0, chy)     # experimento
# limY[2] <- limY[2] * pct.y
# Limite en X
if (class(limites) == "NULL"){
limX <- c(min(xscale), max(xscale))
} else {
limX <- limites
}
sdata <- find.segment(gdata, st.edit, "S")
wdata <- find.segment(gdata, st.edit, "W")
sdata
if ((nrow(gdata) + 1) == sdata$fin[nrow(sdata)]){
sdata$fin[nrow(sdata)] <- nrow(gdata)
} else {
wdata$fin[nrow(wdata)] <- nrow(gdata)
}
(nrow(gdata) + 1)
head(sdata)
head(wdata)
sdata$fin[nrow(sdata)]
wdata$fin[nrow(wdata)]
nrow(gdata)
sdata[nrow(sdata),2]
n <- nrow(gdata)
sdata[nrow(sdata),2] == n
sdata[nrow(sdata),2] == n
