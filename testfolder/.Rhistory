# Librerias
library(stringr)
library(dplyr)
library(lubridate)
progfolder <- "D:/OneDrive/INTA/Actigrafia"
# Cargar funciones mias
source(file.path(progfolder, "func", "order.var.r"))
# Cargar las settings
setwd(progfolder)
source(file.path(progfolder, "func", "01_settings.r"))
getset()
progfolder
source(file.path(progfolder, "func", "order.var.r"))
progfolder <- "D:/OneDrive/INTA/Actigrafia"
# Cargar funciones mias
source(file.path(progfolder, "func_awd", "order.var.r"))
# Cargar las settings
setwd(progfolder)
source(file.path(progfolder, "func_awd", "01_settings.r"))
getset()
setwd("D:/OneDrive/INTA/Actigrafia/testfolder")
archivo <- "BenjaminVenegas.AWD"
source(file.path(progfolder, "func", "02_acv.r"))
source(file.path(progfolder, "func_awd", "02_acv.r"))
source(file.path(progfolder, "func_awd", "02_acv.r"))
source('D:/OneDrive/INTA/Actigrafia/func_awd/02_acv.r', encoding = 'UTF-8', echo=TRUE)
source('D:/OneDrive/INTA/Actigrafia/func_awd/02_acv.r', encoding = 'UTF-8', echo=TRUE)
source('D:/OneDrive/INTA/Actigrafia/func_awd/02_acv.r', encoding = 'UTF-8', echo=TRUE)
source(file.path(progfolder, "func_awd", "02_acv.r"))
awd <- create.acv(archivo, sensivar)
source(file.path(progfolder, "func", "03_epi.r"))
source(file.path(progfolder, "func_awd", "03_epi.r"))
epi <- create.epi(awd)
View(create.acv)
View(getset)
View(epi)
head(awd)
source('D:/OneDrive/INTA/Actigrafia/processAWD.R', encoding = 'UTF-8', echo=TRUE)
rm(list=ls())
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
View(create.acv)
epi
epi <- cbind(epi,
data.frame(str_split(epi$periodo, " ", simplify = TRUE),
stringsAsFactors = FALSE))
epi <- rename(epi, dianoc = X1, nper = X2)
epi
source(file.path(progfolder, "func_awd", "omerge.var.r"))
source(file.path(progfolder, "func_awd", "omerge.r"))
epi <- select(epi, stage, duracion, periodo, dianoc, nper)
awd <- omerge(awd, epi, byvar = "stage", keep = TRUE)       # Se va el primer dia
awd <- awd$match
awd <- arrange(awd, index) %>% select(-merge, -act2, -half)
epi <- cbind(epi,
data.frame(str_split(epi$periodo, " ", simplify = TRUE),
stringsAsFactors = FALSE))
epi <- rename(epi, dianoc = X1, nper = X2)
# Merge epi - awd
epi <- select(epi, stage, duracion, periodo, dianoc, nper)
awd <- omerge(awd, epi, byvar = "stage", keep = TRUE)       # Se va el primer dia
awd <- awd$match
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
epi <- cbind(epi,
data.frame(str_split(epi$periodo, " ", simplify = TRUE),
stringsAsFactors = FALSE))
epi <- rename(epi, dianoc = X1, nper = X2)
# Merge epi - awd
epi <- select(epi, stage, duracion, periodo, dianoc, nper)
awd <- omerge(awd, epi, byvar = "stage", keep = TRUE)       # Se va el primer dia
awd <- awd$match
head(awd)
awd <- arrange(awd, index) %>% select(-merge, -act2)
# Corregir hora inicio de cada etapa al formato continuo de hora
temp <- NULL
for (per in unique(awd$nper)){        # 'fec' per = "03"
per.data <- filter(awd, nper == per) %>% arrange(fec)
hrstart <- per.data$fec[1]
# Necesito el ininoc con fecha
if (hour(hrstart) < ininoc){
temp.date <- (date(hrstart) - 1) + ininoc
} else {
temp.date <- date(hrstart)
}
# Cuanta diferencia entre la fecha y el temp.date
per.data <- mutate(per.data, delta = difftime(fec, temp.date, units = 'hours'))
per.data <- mutate(per.data, hrdec = as.numeric(20 + delta)) %>% select(-delta)    # <<<<<< arreglar esto
temp <- rbind(temp, per.data)
}
awd <- temp
head(awd)
test <- group_by(awd, nper)
summarize(test, min(hrdec))
summarize(test, min(dec), min(hrdec))
epi
summarize(test, min(dec), max(dec), min(hrdec))
summarize(test, min(dec), max(dec), min(hrdec), max(hrdec))
source('D:/OneDrive/INTA/Actigrafia/processAWD.R', encoding = 'UTF-8', echo=TRUE)
epi
summarize(test, min(dec), max(dec), min(hrdec), max(hrdec))
head(awd)
head(temp)
summarize(test, min(dec), max(dec), min(hrdec), max(hrdec))
archivo
sub(".[Aa][Ww][Dd]", "", archivo)
paste(sub(".[Aa][Ww][Dd]", "", archivo), "_epi", sep = "")
paste(sub(".[Aa][Ww][Dd]", "", archivo), "_epi.rds", sep = "")
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source(file.path(progfolder, "func_awd", "okeep.r"))
okeep(c("okeep", "omerge", "ordervar"))
awd <- resdRDS("BenjaminVenegas_acv.rds")
awd <- readRDS("BenjaminVenegas_acv.rds")
epi <- readRDS("BenjaminVenegas_epi.rds")
epi <- cbind(epi,
data.frame(str_split(epi$periodo, " ", simplify = TRUE),
stringsAsFactors = FALSE))
epi <- rename(epi, dianoc = X1, nper = X2)
epi <- select(epi, stage, duracion, periodo, dianoc, nper)
awd <- omerge(awd, epi, byvar = "stage", keep = TRUE)       # Se va el primer dia
awd <- awd$match
awd <- arrange(awd, index) %>% select(-merge, -act2)
temp <- NULL
unique(awd$nper)
per = "01"
per.data <- filter(awd, nper == per) %>% arrange(fec)
head(per.data)
hrstart <- per.data$fec[1]
hrstart
difftime(per.data$fec[2], per.data$fec[1])
difftime(per.data$fec[2], per.data$fec[1], units = "secs")
epoch <- difftime(per.data$fec[2], per.data$fec[1], units = "secs")
epoch
epoch <- as.numeric(epoch)
1/24
1/24/60
1/24/60/epoch
by <- 1/24/60/epoch
1/epoch
by <- 60/epoch
by
per.data$fec[2] - per.data$fec[1]
per.data$dec[2] - per.data$dec[1]
hasta <- per.data$dec[nrow(per.data)]
desde <- per.data$dec[1]
desde <- per.data$dec[1]
desde <- per.data$dec[1]
desde <- per.data$dec[1]
hasta <- per.data$dec[nrow(per.data)]
by <- per.data$dec[2] - per.data$dec[1]
rm(hrstart, temp, epoch)
hasta <- nrow(per.data)
class(hasta)
hasta <- dim(per.data)[1]
epoch <- per.data$dec[2] - per.data$dec[1]
seq(from = desde, by = epoch, length.out = 10)
head(per.data)
secuencia <- seq(from = desde, by = epoch, length.out = hasta)
per.data$dec.seq <- secuencia
head(per.data)
tail(per.data)
(51.33333 - 48) * 60
(51.33333 - 48)
temp <- NULL
for (per in unique(awd$nper)){        # per = "01"
per.data <- filter(awd, nper == per) %>% arrange(fec)
# Cuanto vale ese epoch (secs) en las 24 horas
desde <- per.data$dec[1]
hasta <- nrow(per.data)
epoch <- per.data$dec[2] - per.data$dec[1]
secuencia <- seq(from = desde, by = epoch, length.out = hasta)
per.data$dec.seq <- secuencia
temp <- rbind(temp, per.data)
}
awd <- temp
test <- group_by(awd, nper)
test <- group_by(awd, nper)
summarize(test, min(dec), max(dec), min(hrdec), max(hrdec))
summarize(test, min(dec), max(dec), min(dec.seq), max(dec.seq))
summarize(test, min(fec), min(dec.seq), max(fec), max(dec.seq))
epi
epi <- readRDS("BenjaminVenegas_epi.rds")
epi
head(awd)
temp <- filter(awd, nper = "05")
temp <- filter(awd, nper == "05")
head(temp)
tail(temp)
library(openxlsx)
write.xlsx(temp, "temp.xlsx")
per = "01"
per.data <- filter(awd, nper == per) %>% arrange(fec)
# Cuanto vale ese epoch (secs) en las 24 horas
desde <- per.data$dec[1]
hasta <- nrow(per.data)
epoch <- per.data$dec[2] - per.data$dec[1]
secuencia <- seq(from = desde, by = epoch, length.out = hasta)
per.data$dec.seq <- secuencia
gdata <- per.data
head(gdata)
head(gdata)
temp <- gdata$hrdec
temp <- floor(temp)
temp <- unique(temp)
temp <- c(temp, max(temp)+1)
temp <- gdata$dec.seq
temp <- gdata$dec.seq
temp <- floor(temp)
temp <- unique(temp)
temp <- c(temp, max(temp)+1)
temp
xscale <- gdata$dec.seq
xscale <- floor(xscale)
xscale <- unique(xscale)
xscale <- c(xscale, max(xscale)+1)
rm(temp)
# Labels (horas)
xlabel <- NULL
for (i in xscale){
if (i >= 48){
xlabel <- c(xlabel, i - 48)
} else if (i >= 24) {
xlabel <- c(xlabel, i - 24)
} else {
xlabel <- c(xlabel, i)
}
}
xlabel
ylinea <- c(gdata$hrdec[1],
max(gdata$hrdec[gdata$dianoc == "Noche"]),
gdata$hrdec[nrow(gdata)])
ylinea <- c(gdata$dec.seq[1],
max(gdata$dec.seq[gdata$dianoc == "Noche"]),
gdata$dec.seq[nrow(gdata)])
sdata <- filter(gdata, acti2 == "S")
sdata <- group_by(sdata, stage)
sdata <- as.data.frame(summarize(sdata, min = min(hrdec), max = max(hrdec)))
sdata <- filter(gdata, acti2 == "S")
sdata <- group_by(sdata, stage)
sdata <- as.data.frame(summarize(sdata, min = min(dec.seq), max = max(dec.seq)))
sdata <- filter(gdata, acti2 == "S")
sdata <- group_by(sdata, stage)
sdata <- as.data.frame(summarize(sdata, min = min(dec.seq), max = max(dec.seq)))
sdata
limY <-  c(0, ceiling(max(gdata$act3)/100)*100)
limX <- c(min(xscale), max(xscale))
par(mar=c(2,2,0,2) + 0.5, xaxs = 'i', yaxs = 'i')
plot(gdata$dec.seq, gdata$act3, type='n', ylab='', axes=FALSE, xlim=limX, ylim=limY)
for (i in 1:nrow(sdata)){
rect(sdata$min[i], 0, sdata$max[i], limY[2], col = alpha("skyblue", 0.5), border = "skyblue")
}
