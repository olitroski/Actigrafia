# | Acciones a tomar ------------------------------------------------------
    # Crear un reactive cada vez que se apriete el boton
    actSelection <- eventReactive(input$accion_button, {
        input$accion_choice
    })
    
    # El resultado de apretar el botn se va a un render text
    output$resultBtn <- renderPrint({
        # | ---- Analisis inicial -------------------------------------------------
        if (actSelection() == "Analizar"){
            # Si aprieta y no se ha seleccionado un sujeto
            if (awdfile() == "Debe ingresar un sujeto"){
                showNotification("Error, no hay sujeto")
                cat("Debe seleccionar un sujeto primero")
                
            # Si hay sujeto proseguir
            } else {
                subj.status <- filter(subjectDF(), Sujeto == awdfile()) %>% select(Status)
                subj.status <- subj.status[1,1]
                
                # Hay sujeto, pero con status Editar oTErminado
                if (subj.status == "En edicion"){
                    showNotification("Error, Sujeto en edición")
                    cat("Sujeto está en edición, para reprocesar borrar archivos manualmente")                    
                } else if (subj.status == "Terminado"){
                    showNotification("Error, Sujeto terminado")
                    cat("Sujeto terminado, para reprocesar borrar archivos manualmente") 
                    
                # Ahora si procesar el sujeto desde cero
                } else if (subj.status == "No procesado"){
                    showNotification("Procesando...")
                    
                    # La vuelta completa está en el powerpoint
                    sujeto <- paste(awdfile(), ".AWD", sep = "")
                    acv <- create.acv(sujeto, set$sensivar)
                    semiper <- create.semiper(sujeto, acv)
                    filter.stats <- create.firstfilter(sujeto, semiper)
                    acv.edit <- create.acvedit(sujeto, acv, filter.stats)
                    
                    # Si no quedó alguna cagada quedaría listo
                    cat("Sujeto procesado, revisar archivos de edición o cargar actograma.")
                }
            }
        }
        
        
        
        
        
    })


    
    

    
    
     
    # | -- Actograma ----------------------------------------------------------
    output$actograma <- renderPlot({
        fn.setwd()
        #sujeto <- paste(awdfile, ".AWD", sep = "")
        
        awdfile <- "2058-001-368 JRG Baseline.AWD"
        newname <- str_replace(string=awdfile,
                               pattern=".[Aa][Ww][Dd]$",
                               replacement = "_acv.edit.RDS")
        acv.edit <- readRDS(file = newname)
        semiper <- create.semiper(awdfile, acv.edit)
        
        # lefiles <- dir()
        # acv.edit <- grep(sub(".[Aa][Ww][Dd]$", "_acv.edit.RDS", awdfile), lefiles)
        # acv.edit <- lefiles[acv.edit]
        # acv.edit <- readRDS(acv.edit)
        # semiper <- create.semiper(awdfile, acv.edit)
        # windows()
        create.actogram(semiper)


    })


    
}


-----------------------------------------------------------
Otra vesrion

    # | Acciones a tomar ------------------------------------------------------
    # Crear un reactive cada vez que se apriete el boton
    actSelection <- eventReactive(input$accion_button, {
        
        # | ---- Analisis inicial -------------------------------------------------
        if (input$accion_choice == "Analizar"){
            # Si aprieta y no se ha seleccionado un sujeto
            if (awdfile() == "Debe ingresar un sujeto"){
                showNotification("Error, no hay sujeto")
                cat("Debe seleccionar un sujeto primero")
                
            # Si hay sujeto proseguir
            } else {
                subj.status <- filter(subjectDF(), Sujeto == awdfile()) %>% select(Status)
                subj.status <- subj.status[1,1]
                
                # Hay sujeto, pero con status Editar oTErminado
                if (subj.status == "En edicion"){
                    showNotification("Error, Sujeto en edición")
                    cat("Sujeto está en edición, para reprocesar borrar archivos manualmente")                    
                } else if (subj.status == "Terminado"){
                    showNotification("Error, Sujeto terminado")
                    cat("Sujeto terminado, para reprocesar borrar archivos manualmente") 
                    
                # Ahora si procesar el sujeto desde cero
                } else if (subj.status == "No procesado"){
                    showNotification("Procesando...")
                    
                    # La vuelta completa está en el powerpoint
                    sujeto <- paste(awdfile(), ".AWD", sep = "")
                    acv <- create.acv(sujeto, set$sensivar)
                    semiper <- create.semiper(sujeto, acv)
                    filter.stats <- create.firstfilter(sujeto, semiper)
                    acv.edit <- create.acvedit(sujeto, acv, filter.stats)
                    
                    # Si no quedó alguna cagada quedaría listo
                    cat("Sujeto procesado, revisar archivos de edición o cargar actograma.")
                }
            }
        }
    })
    
    # El resultado de apretar el botn se va a un render text
    output$resultBtn <- renderPrint({
        #actSelection()
        
        
    })
    
    
    
    
    
    
    
    
    # | -- Actograma ----------------------------------------------------------
    output$actograma <- renderPlot({
        fn.setwd()
        #sujeto <- paste(awdfile, ".AWD", sep = "")
        
        awdfile <- "2058-001-368 JRG Baseline.AWD"
        newname <- str_replace(string=awdfile,
                               pattern=".[Aa][Ww][Dd]$",
                               replacement = "_acv.edit.RDS")
        acv.edit <- readRDS(file = newname)
        semiper <- create.semiper(awdfile, acv.edit)
        
        # lefiles <- dir()
        # acv.edit <- grep(sub(".[Aa][Ww][Dd]$", "_acv.edit.RDS", awdfile), lefiles)
        # acv.edit <- lefiles[acv.edit]
        # acv.edit <- readRDS(acv.edit)
        # semiper <- create.semiper(awdfile, acv.edit)
        # windows()
        create.actogram(semiper)


    })


    
}


